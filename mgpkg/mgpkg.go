package mgpkg

import (
	"bytes"
	"encoding/json"
	"fmt"
	"mirage-go/cmd"
	"mirage-go/core"
	"os"
	"strings"

	"github.com/shotastage/GFileable"
)

func Initialize() {

	println("ðŸ”„  Initializing MIRAGE package...")
	prepareFile()

	print("Type project name: ")
	pjname := core.StrStdin()

	print("Type your name: ")
	name := core.StrStdin()

	print("Type version: ")
	version := core.StrStdin()

	print("Type programming language: ")
	lang := core.StrStdin()

	print("Project description: ")
	desc := core.StrStdin()

	print("What's license: ")
	license := core.StrStdin()

	file := GFileable.Path("./Mgfile")

	mgfile := MgfileConfig{
		Name:        pjname,
		Version:     version,
		Author:      name,
		Language:    lang,
		Description: desc,
		License:     license,
	}

	jsonBytes, err := json.Marshal(mgfile)
	out := new(bytes.Buffer)
	json.Indent(out, jsonBytes, "", "    ")

	if err != nil {
		fmt.Println("JSON Marshal error:", err)
		return
	}

	file.WriteString(":* This file is generated by Mirage Go DO NOT EDIT THIS FILE MANUALLY *:\n")
	file.WriteString(out.String())

	cmd.Sess.Exec()
}

func makeLine(str ...string) string {
	return strings.Join(str, "") + "\n"
}

func prepareFile() {

	if GFileable.Path("Mgfile").IsFile() {
		println("ðŸ¤”  Mgfile already exists! Initialzing project has been aborted.")
		os.Exit(1)
	}

	GFileable.Touch("Mgfile")
}
